(VENV) admin@DRX DeepCoderX % python run_tests.py

🚀 Running DeepCoderX Test Suite...
=========================================
==================================== test session starts =====================================
platform darwin -- Python 3.13.5, pytest-8.4.1, pluggy-1.6.0 -- /Users/admin/Documents/DeepCoderX/VENV/bin/python
cachedir: .pytest_cache
rootdir: /Users/admin/Documents/DeepCoderX
configfile: pytest.ini
plugins: mock-3.14.1, requests-mock-1.12.1
collected 39 items

test_basic.py::test_basic_math PASSED                                                  [  2%]
test_basic.py::test_string_operations PASSED                                           [  5%]
test_basic.py::test_list_operations PASSED                                             [  7%]
test_direct.py::test_mcp_services_directly PASSED                                      [ 10%]
test_direct.py::test_command_router_directly PASSED                                    [ 12%]
test_direct.py::test_llm_handlers_directly PASSED                                      [ 15%]
test_imports.py::test_imports PASSED                                                   [ 17%]
test_imports.py::test_basic_functionality PASSED                                       [ 20%]
test_router_only.py::test_command_router PASSED                                        [ 23%]
test_syntax.py::test_syntax ERROR                                                      [ 25%]
tests/test_auto_implement_handler.py::test_parse_response PASSED                       [ 28%]
tests/test_auto_implement_handler.py::test_apply_change PASSED                         [ 30%]
tests/test_command_router.py::test_command_routing PASSED                              [ 33%]
tests/test_command_router.py::test_fallback_handler PASSED                             [ 35%]
tests/test_command_router.py::test_middleware_execution PASSED                         [ 38%]
tests/test_filesystem_handler.py::test_filesystem_handler_list_dir PASSED              [ 41%]
tests/test_filesystem_handler.py::test_filesystem_handler_read_file PASSED             [ 43%]
tests/test_integration.py::test_full_command_integration PASSED                        [ 46%]
tests/test_integration.py::test_mcp_client_integration_read_file PASSED                [ 48%]
tests/test_integration.py::test_mcp_client_integration_write_file PASSED               [ 51%]
tests/test_integration.py::test_mcp_client_integration_list_dir PASSED                 [ 53%]
tests/test_integration.py::test_mcp_client_integration_delete_path PASSED              [ 56%]
tests/test_llm_handlers.py::test_local_handler_initialization PASSED                   [ 58%]
tests/test_llm_handlers.py::test_local_handler_simple_prompt PASSED                    [ 61%]
tests/test_llm_handlers.py::test_local_handler_with_file_mention PASSED                [ 64%]
tests/test_llm_handlers.py::test_clear_history PASSED                                  [ 66%]
tests/test_mcp_services.py::test_read_file_success FAILED                              [ 69%]
tests/test_mcp_services.py::test_write_file_success FAILED                             [ 71%]
tests/test_mcp_services.py::test_list_dir_success FAILED                               [ 74%]
tests/test_mcp_services.py::test_delete_path_success FAILED                            [ 76%]
tests/test_mcp_services.py::test_client_handles_network_error PASSED                   [ 79%]
tests/test_mcp_services.py::test_write_file_network_error PASSED                       [ 82%]
tests/test_mcp_services.py::test_list_dir_network_error PASSED                         [ 84%]
tests/test_mcp_services.py::test_delete_path_network_error PASSED                      [ 87%]
tests/test_mcp_services.py::test_read_file_with_special_characters FAILED              [ 89%]
tests/test_mcp_services.py::test_delete_path_without_recursive FAILED                  [ 92%]
tests/test_tool_loop.py::test_single_tool_call_loop PASSED                             [ 94%]
tests/test_tool_loop.py::test_multiple_tool_calls_in_one_turn FAILED                   [ 97%]
tests/test_tool_loop.py::test_tool_loop_with_invalid_json ERROR                        [100%]

=========================================== ERRORS ===========================================
_______________________________ ERROR at setup of test_syntax ________________________________
file /Users/admin/Documents/DeepCoderX/test_syntax.py, line 10
  def test_syntax(file_path):
E       fixture 'file_path' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, doctest_namespace, mocker, module_mocker, monkeypatch, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, requests_mock, session_mocker, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/Users/admin/Documents/DeepCoderX/test_syntax.py:10
_____________________ ERROR at setup of test_tool_loop_with_invalid_json _____________________
file /Users/admin/Documents/DeepCoderX/tests/test_tool_loop.py, line 86
  @patch('services.llm_handler.config')
  def test_tool_loop_with_invalid_json(command_context, mock_llama, mock_config):
E       fixture 'mock_config' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, command_context, doctest_namespace, mock_llama, mocker, module_mocker, monkeypatch, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, requests_mock, session_mocker, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/Users/admin/Documents/DeepCoderX/tests/test_tool_loop.py:86
========================================== FAILURES ==========================================
___________________________________ test_read_file_success ___________________________________

mock_get = <MagicMock name='get' id='4389118576'>
mcp_client = <services.mcpclient.MCPClient object at 0x1054bf570>

    @patch('services.mcpclient.requests.get')
    def test_read_file_success(mock_get, mcp_client):
        """Tests a successful file read call."""
        mock_response = MagicMock()
        mock_response.json.return_value = {"content": "hello world"}
        mock_get.return_value = mock_response

        result = mcp_client.read_file("test.txt")

        mock_get.assert_called_once_with(
            "http://test.server:8080/read?file=test.txt",
            headers={"Content-Type": "application/json", "X-API-Key": "test-key"},
            timeout=10
        )
>       assert result == {"content": "hello world"}
E       assert {'error': "HT...4389520448'>"} == {'content': 'hello world'}
E
E         Left contains 1 more item:
E         {'error': "HTTP <MagicMock name='get().status_code' id='4389520448'>"}
E         Right contains 1 more item:
E         {'content': 'hello world'}
E
E         Full diff:...
E
E         ...Full output truncated (4 lines hidden), use '-vv' to show

tests/test_mcp_services.py:28: AssertionError
__________________________________ test_write_file_success ___________________________________

mock_post = <MagicMock name='post' id='4389116224'>
mcp_client = <services.mcpclient.MCPClient object at 0x10551ec50>

    @patch('services.mcpclient.requests.post')
    def test_write_file_success(mock_post, mcp_client):
        """Tests a successful file write call."""
        mock_response = MagicMock()
        mock_response.json.return_value = {"status": "success"}
        mock_post.return_value = mock_response

        result = mcp_client.write_file("new.txt", "some content")

        mock_post.assert_called_once_with(
            "http://test.server:8080/write",
            headers={"Content-Type": "application/json", "X-API-Key": "test-key"},
            json={"file": "new.txt", "content": "some content"},
            timeout=10
        )
>       assert result == {"status": "success"}
E       assert {'error': "HT...4389113200'>"} == {'status': 'success'}
E
E         Left contains 1 more item:
E         {'error': "HTTP <MagicMock name='post().status_code' id='4389113200'>"}
E         Right contains 1 more item:
E         {'status': 'success'}
E
E         Full diff:...
E
E         ...Full output truncated (4 lines hidden), use '-vv' to show

tests/test_mcp_services.py:45: AssertionError
___________________________________ test_list_dir_success ____________________________________

mock_post = <MagicMock name='post' id='4389523136'>
mcp_client = <services.mcpclient.MCPClient object at 0x10551ef50>

    @patch('services.mcpclient.requests.post')
    def test_list_dir_success(mock_post, mcp_client):
        """Tests a successful directory listing call."""
        mock_response = MagicMock()
        mock_response.json.return_value = {"files": ["a.txt"], "directories": ["d1"]}
        mock_post.return_value = mock_response

        result = mcp_client.list_dir(".")

        mock_post.assert_called_once_with(
            "http://test.server:8080/list",
            headers={"Content-Type": "application/json", "X-API-Key": "test-key"},
            json={"path": "."},
            timeout=10
        )
>       assert result == {"files": ["a.txt"], "directories": ["d1"]}
E       assert {'error': "HT...4389524144'>"} == {'directories...s': ['a.txt']}
E
E         Left contains 1 more item:
E         {'error': "HTTP <MagicMock name='post().status_code' id='4389524144'>"}
E         Right contains 2 more items:
E         {'directories': ['d1'], 'files': ['a.txt']}
E
E         Full diff:...
E
E         ...Full output truncated (9 lines hidden), use '-vv' to show

tests/test_mcp_services.py:62: AssertionError
__________________________________ test_delete_path_success __________________________________

mock_post = <MagicMock name='post' id='4389525152'>
mcp_client = <services.mcpclient.MCPClient object at 0x1059a37a0>

    @patch('services.mcpclient.requests.post')
    def test_delete_path_success(mock_post, mcp_client):
        """Tests a successful path deletion call."""
        mock_response = MagicMock()
        mock_response.json.return_value = {"status": "success"}
        mock_post.return_value = mock_response

        result = mcp_client.delete_path("path/to/delete", recursive=True)

        mock_post.assert_called_once_with(
            "http://test.server:8080/delete",
            headers={"Content-Type": "application/json", "X-API-Key": "test-key"},
            json={"path": "path/to/delete", "recursive": True},
            timeout=10
        )
>       assert result == {"status": "success"}
E       assert {'error': "HT...4389526160'>"} == {'status': 'success'}
E
E         Left contains 1 more item:
E         {'error': "HTTP <MagicMock name='post().status_code' id='4389526160'>"}
E         Right contains 1 more item:
E         {'status': 'success'}
E
E         Full diff:...
E
E         ...Full output truncated (4 lines hidden), use '-vv' to show

tests/test_mcp_services.py:79: AssertionError
___________________________ test_read_file_with_special_characters ___________________________

mock_get = <MagicMock name='get' id='4389524480'>
mcp_client = <services.mcpclient.MCPClient object at 0x1059c0ad0>

    @patch('services.mcpclient.requests.get')
    def test_read_file_with_special_characters(mock_get, mcp_client):
        """Tests reading a file with special characters in the path."""
        mock_response = MagicMock()
        mock_response.json.return_value = {"content": "special content"}
        mock_get.return_value = mock_response

        result = mcp_client.read_file("path with spaces/special-file_123.txt")

        mock_get.assert_called_once_with(
            "http://test.server:8080/read?file=path with spaces/special-file_123.txt",
            headers={"Content-Type": "application/json", "X-API-Key": "test-key"},
            timeout=10
        )
>       assert result == {"content": "special content"}
E       assert {'error': "HT...4389527504'>"} == {'content': 'special content'}
E
E         Left contains 1 more item:
E         {'error': "HTTP <MagicMock name='get().status_code' id='4389527504'>"}
E         Right contains 1 more item:
E         {'content': 'special content'}
E
E         Full diff:...
E
E         ...Full output truncated (4 lines hidden), use '-vv' to show

tests/test_mcp_services.py:139: AssertionError
_____________________________ test_delete_path_without_recursive _____________________________

mock_post = <MagicMock name='post' id='4389524144'>
mcp_client = <services.mcpclient.MCPClient object at 0x1059c2c90>

    @patch('services.mcpclient.requests.post')
    def test_delete_path_without_recursive(mock_post, mcp_client):
        """Tests path deletion without recursive flag."""
        mock_response = MagicMock()
        mock_response.json.return_value = {"status": "success"}
        mock_post.return_value = mock_response

        result = mcp_client.delete_path("file.txt")

        mock_post.assert_called_once_with(
            "http://test.server:8080/delete",
            headers={"Content-Type": "application/json", "X-API-Key": "test-key"},
            json={"path": "file.txt", "recursive": False},
            timeout=10
        )
>       assert result == {"status": "success"}
E       assert {'error': "HT...4389523136'>"} == {'status': 'success'}
E
E         Left contains 1 more item:
E         {'error': "HTTP <MagicMock name='post().status_code' id='4389523136'>"}
E         Right contains 1 more item:
E         {'status': 'success'}
E
E         Full diff:...
E
E         ...Full output truncated (4 lines hidden), use '-vv' to show

tests/test_mcp_services.py:156: AssertionError
____________________________ test_multiple_tool_calls_in_one_turn ____________________________

mock_llama = <MagicMock name='Llama' id='4389532208'>
mock_config = <MagicMock name='config' id='4389532544'>
command_context = <MagicMock spec='CommandContext' id='4389531872'>

    @patch('services.llm_handler.config')
    @patch('services.llm_handler.Llama')
    def test_multiple_tool_calls_in_one_turn(mock_llama, mock_config, command_context):
        """Tests that the handler can execute multiple tool calls from a single model response."""
        mock_config.ROLE_SYSTEM = "Test system prompt"
        mock_config.LOCAL_MODEL_PATH = "/fake/path/model.gguf"

        mock_llama_instance = mock_llama.return_value
        # The model asks to read two files at once.
        mock_llama_instance.create_chat_completion.side_effect = [
            {'choices': [{'message': {'content': 'I need to read two files.\n{"tool": "read_file", "path": "a.txt"}\n{"tool": "read_file", "path": "b.txt"}'}}]}
            ,
            {'choices': [{'message': {'content': 'OK, I have both files.'}}]}
        ]
        command_context.mcp_client.read_file.side_effect = [
            {"content": "content of a"},
            {"content": "content of b"}
        ]

        handler = LocalCodingHandler(command_context)
        command_context.user_input = "compare a.txt and b.txt"
        handler.handle()

        # Check that read_file was called for both files
>       assert command_context.mcp_client.read_file.call_count == 2
E       AssertionError: assert 0 == 2
E        +  where 0 = <MagicMock name='mock.mcp_client.read_file' id='4389533552'>.call_count
E        +    where <MagicMock name='mock.mcp_client.read_file' id='4389533552'> = <MagicMock name='mock.mcp_client' id='4389531536'>.read_file
E        +      where <MagicMock name='mock.mcp_client' id='4389531536'> = <MagicMock spec='CommandContext' id='4389531872'>.mcp_client

tests/test_tool_loop.py:75: AssertionError
================================== short test summary info ===================================
FAILED tests/test_mcp_services.py::test_read_file_success - assert {'error': "HT...4389520448'>"} == {'content': 'hello world'}
FAILED tests/test_mcp_services.py::test_write_file_success - assert {'error': "HT...4389113200'>"} == {'status': 'success'}
FAILED tests/test_mcp_services.py::test_list_dir_success - assert {'error': "HT...4389524144'>"} == {'directories...s': ['a.txt']}
FAILED tests/test_mcp_services.py::test_delete_path_success - assert {'error': "HT...4389526160'>"} == {'status': 'success'}
FAILED tests/test_mcp_services.py::test_read_file_with_special_characters - assert {'error': "HT...4389527504'>"} == {'content': 'special content'}
FAILED tests/test_mcp_services.py::test_delete_path_without_recursive - assert {'error': "HT...4389523136'>"} == {'status': 'success'}
FAILED tests/test_tool_loop.py::test_multiple_tool_calls_in_one_turn - AssertionError: assert 0 == 2
ERROR test_syntax.py::test_syntax
ERROR tests/test_tool_loop.py::test_tool_loop_with_invalid_json
===================== 7 failed, 30 passed, 6 warnings, 2 errors in 3.38s =====================
=========================================
❌ Tests failed with exit code: 1
(VENV) admin@DRX DeepCoderX % python run_tests.py

🚀 Running DeepCoderX Test Suite...
=========================================
==================================== test session starts =====================================
platform darwin -- Python 3.13.5, pytest-8.4.1, pluggy-1.6.0 -- /Users/admin/Documents/DeepCoderX/VENV/bin/python
cachedir: .pytest_cache
rootdir: /Users/admin/Documents/DeepCoderX
configfile: pytest.ini
plugins: mock-3.14.1, requests-mock-1.12.1
collected 21 items / 5 errors

=========================================== ERRORS ===========================================
___________________ ERROR collecting tests/test_auto_implement_handler.py ____________________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_auto_implement_handler.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_auto_implement_handler.py:4: in <module>
    from services.llm_handler import AutoImplementHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
_____________________ ERROR collecting tests/test_filesystem_handler.py ______________________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_filesystem_handler.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_filesystem_handler.py:3: in <module>
    from services.llm_handler import FilesystemCommandHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
_________________________ ERROR collecting tests/test_integration.py _________________________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_integration.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_integration.py:5: in <module>
    from services.llm_handler import LocalCodingHandler, DeepSeekAnalysisHandler, FilesystemCommandHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
________________________ ERROR collecting tests/test_llm_handlers.py _________________________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_llm_handlers.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_llm_handlers.py:3: in <module>
    from services.llm_handler import LocalCodingHandler, DeepSeekAnalysisHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
__________________________ ERROR collecting tests/test_tool_loop.py __________________________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_tool_loop.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_tool_loop.py:4: in <module>
    from services.llm_handler import LocalCodingHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
================================== short test summary info ===================================
ERROR tests/test_auto_implement_handler.py
ERROR tests/test_filesystem_handler.py
ERROR tests/test_integration.py
ERROR tests/test_llm_handlers.py
ERROR tests/test_tool_loop.py
!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 5 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!
===================================== 5 errors in 1.10s ======================================
=========================================
❌ Tests failed with exit code: 2
(VENV) admin@DRX DeepCoderX % python complete_test_solution.py
🚀 DeepCoderX Test Suite - Complete Fix and Validation
============================================================
📁 Project: /Users/admin/Documents/DeepCoderX
⏰ Started: 2025-06-29 16:42:14

🔄 Running Quick Diagnostic Test...
--------------------------------------------------
🧪 Quick Test - Single Test Execution
========================================
📁 Working directory: /Users/admin/Documents/DeepCoderX
🐍 Python executable: /Users/admin/Documents/DeepCoderX/VENV/bin/python

🔍 Step 1: Testing basic imports...
✅ CommandContext import OK
✅ MCPClient import OK
✅ CommandProcessor import OK

🔍 Step 2: Running single MCP test...
Exit code: 0
Output:
============================= test session starts ==============================
collecting ... collected 1 item

tests/test_mcp_services.py::test_read_file_success PASSED                [100%]

============================== 1 passed in 0.01s ===============================

✅ Single test passed!

📊 Quick test completed
✅ Quick Diagnostic Test
   Exit code: 0

🔄 Running Manual Component Validation...
--------------------------------------------------
🧪 Manual Test Execution for DeepCoderX
==================================================
📁 Project root: /Users/admin/Documents/DeepCoderX
🐍 Python path: ['/Users/admin/Documents/DeepCoderX', '/Users/admin/Documents/DeepCoderX', '/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python313.zip']...
🔍 Testing basic imports...
✅ CommandContext imported successfully
✅ MCPClient imported successfully
✅ CommandProcessor imported successfully
✅ LocalCodingHandler imported successfully

🔍 Testing MCPClient basic functionality...
✅ MCPClient instance created successfully
✅ MCPClient has all expected methods

🔍 Testing CommandContext basic functionality...
✅ CommandContext instance created successfully
✅ CommandContext has all expected properties

🔍 Running single pytest test...
STDOUT:
============================= test session starts ==============================
platform darwin -- Python 3.13.5, pytest-8.4.1, pluggy-1.6.0 -- /Users/admin/Documents/DeepCoderX/VENV/bin/python
cachedir: .pytest_cache
rootdir: /Users/admin/Documents/DeepCoderX
configfile: pytest.ini
plugins: mock-3.14.1, requests-mock-1.12.1
collecting ... collected 1 item

tests/test_mcp_services.py::test_read_file_success PASSED                [100%]

============================== 1 passed in 0.02s ===============================

✅ Single pytest test passed!

==================================================
✅ All manual tests passed!
✅ Test infrastructure appears to be working
✅ Manual Component Validation
   Exit code: 0

🔄 Running Comprehensive Test Fixes...
--------------------------------------------------
🔧 DeepCoderX Comprehensive Test Fix Script
==================================================
📁 Project root: /Users/admin/Documents/DeepCoderX
🚀 Starting Comprehensive Test Fix Process...
==================================================

📋 Step 1: Fixing MCPClient tests...
🔍 MCPClient tests already appear to be fixed

📋 Step 2: Fixing session imports...
🔍 No duplicate imports found in session.py

📋 Step 3: Fixing integration tests...

📋 Step 4: Fixing LLM handler tests...

📋 Step 5: Verifying test file syntax...
✅ Syntax OK: test_tool_loop.py
✅ Syntax OK: test_auto_implement_handler.py
✅ Syntax OK: test_llm_handlers.py
✅ Syntax OK: test_command_router.py
✅ Syntax OK: test_filesystem_handler.py
✅ Syntax OK: test_mcp_services.py
✅ Syntax OK: test_integration.py

📋 Step 6: Setting up pytest configuration...
🔍 pytest.ini already exists

📋 Step 7: Running import dry-run...
✅ Import OK: from models.session import CommandContext
✅ Import OK: from services.mcpclient import MCPClient
✅ Import OK: from services.llm_handler import LocalCodingHandler
✅ Import OK: from models.router import CommandProcessor

📋 Step 8: Running simple test validation...

🧪 Running simple test validation...
STDOUT:
============================= test session starts ==============================
platform darwin -- Python 3.13.5, pytest-8.4.1, pluggy-1.6.0 -- /Users/admin/Documents/DeepCoderX/VENV/bin/python
cachedir: .pytest_cache
rootdir: /Users/admin/Documents/DeepCoderX
configfile: pytest.ini
plugins: mock-3.14.1, requests-mock-1.12.1
collecting ... collected 10 items

tests/test_mcp_services.py::test_read_file_success PASSED                [ 10%]
tests/test_mcp_services.py::test_write_file_success PASSED               [ 20%]
tests/test_mcp_services.py::test_list_dir_success PASSED                 [ 30%]
tests/test_mcp_services.py::test_delete_path_success PASSED              [ 40%]
tests/test_mcp_services.py::test_client_handles_network_error PASSED     [ 50%]
tests/test_mcp_services.py::test_write_file_network_error PASSED         [ 60%]
tests/test_mcp_services.py::test_list_dir_network_error PASSED           [ 70%]
tests/test_mcp_services.py::test_delete_path_network_error PASSED        [ 80%]
tests/test_mcp_services.py::test_read_file_with_special_characters PASSED [ 90%]
tests/test_mcp_services.py::test_delete_path_without_recursive PASSED    [100%]

============================== 10 passed in 0.03s ==============================

✅ FIXED: Simple test validation passed!

📋 Step 9: Running full test suite...

🧪 Running full test suite...
STDOUT:
============================= test session starts ==============================
platform darwin -- Python 3.13.5, pytest-8.4.1, pluggy-1.6.0 -- /Users/admin/Documents/DeepCoderX/VENV/bin/python
cachedir: .pytest_cache
rootdir: /Users/admin/Documents/DeepCoderX
configfile: pytest.ini
plugins: mock-3.14.1, requests-mock-1.12.1
collecting ... collected 13 items / 5 errors

==================================== ERRORS ====================================
____________ ERROR collecting tests/test_auto_implement_handler.py _____________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_auto_implement_handler.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_auto_implement_handler.py:4: in <module>
    from services.llm_handler import AutoImplementHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
______________ ERROR collecting tests/test_filesystem_handler.py _______________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_filesystem_handler.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_filesystem_handler.py:3: in <module>
    from services.llm_handler import FilesystemCommandHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
__________________ ERROR collecting tests/test_integration.py __________________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_integration.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_integration.py:5: in <module>
    from services.llm_handler import LocalCodingHandler, DeepSeekAnalysisHandler, FilesystemCommandHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
_________________ ERROR collecting tests/test_llm_handlers.py __________________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_llm_handlers.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_llm_handlers.py:3: in <module>
    from services.llm_handler import LocalCodingHandler, DeepSeekAnalysisHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
___________________ ERROR collecting tests/test_tool_loop.py ___________________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_tool_loop.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_tool_loop.py:4: in <module>
    from services.llm_handler import LocalCodingHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
=========================== short test summary info ============================
ERROR tests/test_auto_implement_handler.py
ERROR tests/test_filesystem_handler.py
ERROR tests/test_integration.py
ERROR tests/test_llm_handlers.py
ERROR tests/test_tool_loop.py
!!!!!!!!!!!!!!!!!!! Interrupted: 5 errors during collection !!!!!!!!!!!!!!!!!!!!
============================== 5 errors in 0.19s ===============================

❌ ERROR: Tests failed with return code: 2

============================================================
🔧 COMPREHENSIVE TEST FIX REPORT
============================================================

✅ FIXES APPLIED (1):
  1. Simple test validation passed!

❌ ERRORS FOUND (1):
  1. Tests failed with return code: 2

📊 SUMMARY:
  • Fixes applied: 1
  • Errors found: 1
  • Success rate: 50.0%

❌ Process completed with 1 errors
❌ Comprehensive Test Fixes
   Exit code: 1

🔄 Running Final Test Suite Validation...
--------------------------------------------------
==================================== test session starts =====================================
platform darwin -- Python 3.13.5, pytest-8.4.1, pluggy-1.6.0 -- /Users/admin/Documents/DeepCoderX/VENV/bin/python
cachedir: .pytest_cache
rootdir: /Users/admin/Documents/DeepCoderX
configfile: pytest.ini
plugins: mock-3.14.1, requests-mock-1.12.1
collected 13 items / 5 errors

=========================================== ERRORS ===========================================
___________________ ERROR collecting tests/test_auto_implement_handler.py ____________________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_auto_implement_handler.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_auto_implement_handler.py:4: in <module>
    from services.llm_handler import AutoImplementHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
_____________________ ERROR collecting tests/test_filesystem_handler.py ______________________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_filesystem_handler.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_filesystem_handler.py:3: in <module>
    from services.llm_handler import FilesystemCommandHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
_________________________ ERROR collecting tests/test_integration.py _________________________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_integration.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_integration.py:5: in <module>
    from services.llm_handler import LocalCodingHandler, DeepSeekAnalysisHandler, FilesystemCommandHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
________________________ ERROR collecting tests/test_llm_handlers.py _________________________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_llm_handlers.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_llm_handlers.py:3: in <module>
    from services.llm_handler import LocalCodingHandler, DeepSeekAnalysisHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
__________________________ ERROR collecting tests/test_tool_loop.py __________________________
ImportError while importing test module '/Users/admin/Documents/DeepCoderX/tests/test_tool_loop.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_tool_loop.py:4: in <module>
    from services.llm_handler import LocalCodingHandler
services/llm_handler.py:14: in <module>
    from config import config
E   ImportError: cannot import name 'config' from 'config' (/Users/admin/Documents/config.py)
================================== short test summary info ===================================
ERROR tests/test_auto_implement_handler.py
ERROR tests/test_filesystem_handler.py
ERROR tests/test_integration.py
ERROR tests/test_llm_handlers.py
ERROR tests/test_tool_loop.py
!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 5 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!
===================================== 5 errors in 0.29s ======================================
❌ Final Test Suite
   Exit code: 2

============================================================
🔧 DEEPCODERX TEST SUITE - FINAL REPORT
============================================================

📊 SUMMARY:
   • Total steps executed: 4
   • Successful steps: 2
   • Failed steps: 2
   • Success rate: 50.0%

📋 DETAILED RESULTS:
   1. ✅ PASS - Quick Diagnostic Test
      └─ Exit code: 0
   2. ✅ PASS - Manual Component Validation
      └─ Exit code: 0
   3. ❌ FAIL - Comprehensive Test Fixes
      └─ Exit code: 1
   4. ❌ FAIL - Final Test Suite
      └─ Exit code: 2

⚠️  SOME ISSUES REMAIN
   • Check the failed steps above
   • Review error details for troubleshooting
   • Consider manual intervention for remaining issues